FROM --platform=$BUILDPLATFORM golang:alpine AS builder
WORKDIR /build

RUN apk add --no-cache git ca-certificates

ARG DERPPROBE_VERSION=v1.90.1
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

ENV CGO_ENABLED=0
ENV GOOS=${TARGETOS}
ENV GOARCH=${TARGETARCH}

RUN git clone --branch ${DERPPROBE_VERSION} https://github.com/tailscale/tailscale.git .
RUN go mod download

RUN go build -a -ldflags '-extldflags "-static"' -o derpprobe ./cmd/derpprobe

FROM alpine:latest
WORKDIR /app

RUN apk add --no-cache ca-certificates

COPY --from=builder /build/derpprobe /derpprobe

ENV DERP_MAP=https://login.tailscale.com/derpmap/default
ENV LISTEN=:8030
ENV ONCE=false
ENV SPREAD=false
ENV INTERVAL=15s
ENV MESH_INTERVAL=15s
ENV STUN_INTERVAL=15s
ENV TLS_INTERVAL=15s
ENV BW_INTERVAL=0
ENV BW_PROBE_SIZE_BYTES=1_000_000

# See https://github.com/tailscale/tailscale/blob/main/cmd/derpprobe/derpprobe.go
ENTRYPOINT ["sh", "-c", "/derpprobe \
    -derp-map=${DERP_MAP} \
    -listen=${LISTEN} \
    -once=${ONCE} \
    -spread=${SPREAD} \
    -interval=${INTERVAL} \
    -mesh-interval=${MESH_INTERVAL} \
    -stun-interval=${STUN_INTERVAL} \
    -tls-interval=${TLS_INTERVAL} \
    -bw-interval=${BW_INTERVAL} \
    -bw-probe-size-bytes=${BW_PROBE_SIZE_BYTES}"]
